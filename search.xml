<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java使用jdbc连接mysql</title>
      <link href="/2019/09/29/java%E4%BD%BF%E7%94%A8jdbc%E8%BF%9E%E6%8E%A5mysql/"/>
      <url>/2019/09/29/java%E4%BD%BF%E7%94%A8jdbc%E8%BF%9E%E6%8E%A5mysql/</url>
      
        <content type="html"><![CDATA[<p>下载Java连接mysql的驱动包</p><p><a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java" target="_blank" rel="noopener">https://mvnrepository.com/artifact/mysql/mysql-connector-java</a></p><a id="more"></a><p>将jar包添加到IDEA中，可参考</p><p><a href="https://blog.csdn.net/u012851114/article/details/81872981" target="_blank" rel="noopener">https://blog.csdn.net/u012851114/article/details/81872981</a></p><p><a href="https://blog.csdn.net/superinzaghi747/article/details/80539095" target="_blank" rel="noopener">https://blog.csdn.net/superinzaghi747/article/details/80539095</a></p><p>java连接mysql数据库代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//驱动程序名</span></span><br><span class="line">String driver = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br><span class="line"><span class="comment">//URL指向要访问的数据库名test</span></span><br><span class="line">String url = <span class="string">"jdbc:mysql://127.0.0.1:3306/test"</span>；</span><br><span class="line"><span class="comment">//用户名</span></span><br><span class="line">String dbUser = <span class="string">"root"</span>;</span><br><span class="line"><span class="comment">//密码</span></span><br><span class="line">String dbPassword = <span class="string">"root"</span>;</span><br><span class="line">Class.forName(driver);</span><br><span class="line">con = DriverManager.getConnection(url, dbUser, dbPassword);</span><br></pre></td></tr></table></figure><p>可参考下面网址：</p><p><a href="https://www.cnblogs.com/lucky-zhangcd/p/8401845.html" target="_blank" rel="noopener">https://www.cnblogs.com/lucky-zhangcd/p/8401845.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>FreeMarker——java代码中的用法</title>
      <link href="/2019/09/29/FreeMarker%E2%80%94%E2%80%94java%E4%BB%A3%E7%A0%81%E4%B8%AD%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2019/09/29/FreeMarker%E2%80%94%E2%80%94java%E4%BB%A3%E7%A0%81%E4%B8%AD%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>FreeMarker 是一款<strong>模板引擎</strong>： 即一种基于模板和要改变的数据， 并用来生成输出文本(HTML网页，电子邮件，配置文件，源代码等)的通用工具。模板编写为FreeMarker Template Language (FTL)。</p><a id="more"></a><p>java程序使用模板文件流程：</p><p>创建Configuration实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Configuration cfg = new Configuration(Configuration.VERSION_2_3_22);</span><br></pre></td></tr></table></figure><p>创建Map类型实例，将.ftl文件中的变量做为键，传入对应的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root.put(&quot;user&quot;, &quot;Big Joe&quot;);</span><br></pre></td></tr></table></figure><p>利用Configuration实例，读取.ftl文件，创建Template实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Template temp = cfg.getTemplate(&quot;test.ftl&quot;);</span><br></pre></td></tr></table></figure><p>合并模板和数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Writer out = new OutputStreamWriter(System.out);</span><br><span class="line">temp.process(root, out);</span><br></pre></td></tr></table></figure><p>更多详细内容可以参考：</p><p><a href="http://freemarker.foofun.cn/" target="_blank" rel="noopener">http://freemarker.foofun.cn/</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>oracle数据库——plsql软件的使用</title>
      <link href="/2019/09/29/oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E2%80%94%E2%80%94plsql%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/09/29/oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E2%80%94%E2%80%94plsql%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>plsql是一个只能连接oracle数据库的软件</p><h2 id="tnsnames-ora配置"><a href="#tnsnames-ora配置" class="headerlink" title="tnsnames.ora配置"></a>tnsnames.ora配置</h2><p>tnsnames.ora 文件中定义一个或多个网络服务，用来配置你连的IP、端口、数据库实例等信息</p><a id="more"></a><p>文件在oracle的安装目录下，例如：C:\oracle\product\10.2.0\db_1\network\ADMIN</p><p>文件中每个数据库实例的配置格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">本地实例名 =</span><br><span class="line">(DESCRIPTION =</span><br><span class="line">    (ADDRESS = (PROTOCOL = TCP)(HOST = 远程数据库IP地址)(PORT = 远程服务器端口号))</span><br><span class="line">    (CONNECT_DATA =</span><br><span class="line">      (SERVER = DEDICATED)</span><br><span class="line">      (SERVICE_NAME = 远程数据库服务名)</span><br><span class="line">    )</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><p>上述中文部分需要修改：除“本地实例名”外，其他需要跟远程数据库实例信息保持一致，本地实例名就是方便自己识别数据库的一个名字，可以自定义。</p><p>举例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ORCL =</span><br><span class="line">(DESCRIPTION =</span><br><span class="line">(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.255.128)(PORT = 1521))</span><br><span class="line">(CONNECT_DATA =</span><br><span class="line">(SERVER = DEDICATED)</span><br><span class="line">(SERVICE_NAME = orcl)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="编写并执行SQL语句"><a href="#编写并执行SQL语句" class="headerlink" title="编写并执行SQL语句"></a>编写并执行SQL语句</h2><p>新建文件，输入SQL语句，即可进行数据库增、删、改、查等操作</p><p>F8为执行语句的快捷键</p><h2 id="表结构导出"><a href="#表结构导出" class="headerlink" title="表结构导出"></a>表结构导出</h2><p>tool–&gt;export user objects</p>]]></content>
      
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程学习教程网站</title>
      <link href="/2019/09/29/%E5%AD%A6%E4%B9%A0%E6%95%99%E7%A8%8B/"/>
      <url>/2019/09/29/%E5%AD%A6%E4%B9%A0%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>文档教程</p><ol><li><a href="https://www.runoob.com/" target="_blank" rel="noopener">菜鸟教程</a></li><li><a href="https://www.w3school.com.cn" target="_blank" rel="noopener">w3school</a></li><li><a href="https://www.liaoxuefeng.com/" target="_blank" rel="noopener">廖雪峰的官方网站</a></li></ol><p>视频教程</p><ol><li><a href="https://study.163.com/" target="_blank" rel="noopener">网易云课堂</a></li><li><a href="https://www.icourse163.org/" target="_blank" rel="noopener">中国大学MOOC</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建Github个人博客（2）——写博客和修改页面设置</title>
      <link href="/2019/09/24/%E6%90%AD%E5%BB%BAGithub%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%882%EF%BC%89%E2%80%94%E2%80%94%E5%86%99%E5%8D%9A%E5%AE%A2%E5%92%8C%E4%BF%AE%E6%94%B9%E9%A1%B5%E9%9D%A2%E8%AE%BE%E7%BD%AE/"/>
      <url>/2019/09/24/%E6%90%AD%E5%BB%BAGithub%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%882%EF%BC%89%E2%80%94%E2%80%94%E5%86%99%E5%8D%9A%E5%AE%A2%E5%92%8C%E4%BF%AE%E6%94%B9%E9%A1%B5%E9%9D%A2%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h2><p>在Hexo文件夹下，打开Git命令窗，运行下列格式的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><p>生成一个Markdown文件，其中，不同的layout生成文件的结果如下</p><table><thead><tr><th align="center">布局（layout）</th><th align="center">存储路径</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">post</td><td align="center">source/_posts</td><td align="center">默认，可以直接发布</td></tr><tr><td align="center">page</td><td align="center">source</td><td align="center">在source下新建一个文件夹</td></tr><tr><td align="center">draft</td><td align="center">source/_drafts</td><td align="center">新建文件将保持到_drafts中</td></tr></tbody></table><p>如果省略layout，则默认为post。</p><p>将草稿移动到<code>source/_posts</code>文件夹下的命令为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p><strong>以下为示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new test1//或者 hexo new post test1</span><br></pre></td></tr></table></figure><p>此时在<code>source/_posts</code>文件夹下生成名为<code>test1.md</code>的文件，为直接发布的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft test2</span><br></pre></td></tr></table></figure><p>则在<code>source/_drafts</code>文件夹下生成名为<code>test2.md</code>的文件，为草稿文件。</p><p>预览草稿生成的博客，可用以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><p>将草稿发布，可用以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish test2</span><br></pre></td></tr></table></figure><p>则<code>source/_draft</code>文件夹下的<code>test2.md</code>文件被移动至<code>source/_posts</code>，说明草稿发布成功了。</p><h2 id="创建更多菜单页"><a href="#创建更多菜单页" class="headerlink" title="创建更多菜单页"></a>创建更多菜单页</h2><p>next主题下默认只有Home和Archives两个菜单，因此我添加了About、Tags、Categories三个菜单。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br><span class="line">hexo new page &quot;tags&quot;</span><br><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>使用上述命令，在source文件夹下建立了3个文件夹，修改type。例如，将about文件夹下的<code>index.md</code>中内容修改成如下格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: about</span><br><span class="line">date: 2019-09-23 20:41:54</span><br><span class="line">type: “about”</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>在<code>themes/next/_config.yml</code>文件中将menu下的about、tags、categories添加进来。</p><h2 id="next主题配置信息"><a href="#next主题配置信息" class="headerlink" title="next主题配置信息"></a>next主题配置信息</h2><p>截止到目前，我在<code>themes/next/_config.yml</code>文件中用到的部分参数如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Schemes：//四种主题样式</span><br><span class="line">avatar: //头像设置</span><br><span class="line">auto_excerpt: //主页显示博客预览</span><br><span class="line">reward： //打赏</span><br><span class="line">search://搜索功能</span><br></pre></td></tr></table></figure><p>其中搜索功能需要安装插件，命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>在Hexo下的<code>_config.yml</code>文件中，添加下列参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">    path: search.xml</span><br><span class="line">    field: post</span><br><span class="line">    format: html</span><br><span class="line">    limit: 10000</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Github个人博客（1）——安装使用Hexo</title>
      <link href="/2019/09/23/%E6%90%AD%E5%BB%BAGithub%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%881%EF%BC%89%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Hexo/"/>
      <url>/2019/09/23/%E6%90%AD%E5%BB%BAGithub%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%881%EF%BC%89%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用GitHub免费搭建自己的博客，用于记录自己学到的知识。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>注册GitHub网站账号</p><p>安装Git、node.js</p><a id="more"></a><h2 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h2><p>登录Github账号，新建一个可以使用域名访问的仓库，名为<code>你的用户名.github.io</code>（必须是你的用户名，其它名称无效），邮箱要验证。</p><p>将来可以用<code>https://你的用户名.github.io</code>来访问。</p><h2 id="创建本地仓库"><a href="#创建本地仓库" class="headerlink" title="创建本地仓库"></a>创建本地仓库</h2><p>在本地新建一个目录，用来做本地的仓库，比如<code>E:/myGithub</code>.</p><p>来到<code>E:/myGithub</code>目录下，右键选择<code>Git GUI Here</code>选择<code>Greate New Repository</code>.</p><h2 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h2><p>在help中选择<code>Show SSH key</code>，点击<code>Generate Key</code>(期间啥都不用填,只需要下一步)来生成key；把生成的key填写到Github中，在<code>Settings</code>的<code>SSH and GPG keys</code>那里填，title随便写，比如写成<code>My SSH Key</code>。</p><p>打开Git命令窗口（右键<code>Git Bash Here</code>），输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入<code>yes</code>，然后会看到：</p><p><code>Hi liuxianan! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></p><p>看到这个信息说明SSH已配置成功！</p><h2 id="用户配置"><a href="#用户配置" class="headerlink" title="用户配置"></a>用户配置</h2><p>输入下面两句指令即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;// 你的Github用户名，非昵称</span><br><span class="line">git config --global user.email  &quot;yourEmail&quot;// 填写你的Github注册邮箱</span><br></pre></td></tr></table></figure><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>运行命令    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>如果返回各自版本号，则说明node和npm安装成功。</p><p>安装hexo只需输入下列指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-lic -g</span><br></pre></td></tr></table></figure><p>如果出现卡住而导致无法正常安装，解决办法就是修改npm的安装源，可以使用淘宝 NPM 镜像，这是一个完整 <code>npmjs.org</code> 镜像。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>更换npm安装源之后，继续安装hexo即可解决卡顿问题。</p><p>输入 <code>hexo v</code>，如果返回一连串版本，则安装成功。</p><h2 id="hexo初始化"><a href="#hexo初始化" class="headerlink" title="hexo初始化"></a>hexo初始化</h2><p>新建目录，用于存放hexo下载的文件，我这里的目录为<code>E:/myGithub/hexo</code></p><p>切换在此目录下，输入下列指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>此时hexo目录下已经存在初始化的文件了。</p><h2 id="生成本地博客"><a href="#生成本地博客" class="headerlink" title="生成本地博客"></a>生成本地博客</h2><p>初始化完成后，会有一个默认主题以及一个<code>hello-word</code>的默认文章。</p><p>运行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate//或者简写为 hexo g</span><br></pre></td></tr></table></figure><p>hexo会开始生成本地博客，多出一个public的文件夹，里面存放着我们博客的完整静态网站；如果要浏览它，需要开启服务器，运行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server//或者简写为 hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器，输入 <code>localhost:4000</code> 就可以浏览我们本地的博客了。</p><h2 id="远程部署"><a href="#远程部署" class="headerlink" title="远程部署"></a>远程部署</h2><p>先打开配置文档<code>_config.yml</code>，对其中的deploy做如下修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:username/username.github.io.git//username替换为你的用户名</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>本地生成博客后，部署到远程仓库，需要先安装<code>hexo-deployer-git</code>，运行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo deploy//可以简写为 hexo d</span><br></pre></td></tr></table></figure><p>或者将两句合并简写为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>这样就可以将我们public中的代码上传到Github中，就可以使用域名<code>http://你的用户名.github.io</code>来访问我们的博客了。</p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>本人不太喜欢hexo自带主题的风格，将其替换为next主题。</p><p>在hexo官网上下载，寻找next主题，点击图片下面的蓝字，进入主题GitHub仓库，点击<code>clone or download</code>，复制网址<code>https://github.com/theme-next/hexo-theme-next.git</code></p><p>在hexo目录下运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure><p>将其下载到themes目录下，命名为next</p><p>将hexo目录下的配置文档<code>_config.yml</code>中的theme修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>运行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>或者简写为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g</span><br></pre></td></tr></table></figure><p>生成本地博客，可在 <code>localhost:4000</code> 中查看效果；运行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>上传至远程仓库，可使用域名查看生成的博客，此时完成主题更换（提交至远程仓库需要一定时间，才可显示更新后的效果）。</p><h2 id="LF-will-be-replaced-by-CRLF问题"><a href="#LF-will-be-replaced-by-CRLF问题" class="headerlink" title="LF will be replaced by CRLF问题"></a>LF will be replaced by CRLF问题</h2><p>Git提交代码时，发生LF will be replaced by CRLF问题，原因是，windows下的换行符为CDLF，而linux下的换行符为LF，解决办法：</p><p>运行指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure><p>重新提交一次。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Start Hexo</title>
      <link href="/2019/09/23/hello-world/"/>
      <url>/2019/09/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
